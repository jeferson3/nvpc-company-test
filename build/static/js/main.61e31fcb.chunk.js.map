{"version":3,"sources":["@types/context_repository.d.ts","Styles/global-style.ts","Services/Api.ts","Environment/index.js","Context/RepositoryContext/actions.ts","Context/RepositoryContext/context.ts","Components/Repository/LoadMore/index.jsx","Services/RepositorySearchBuilder.ts","Components/Repository/Search/index.jsx","Components/Repository/index.tsx","Pages/Repositories/index.tsx","Context/RepositoryContext/data.ts","Context/RepositoryContext/reducer.ts","Context/RepositoryContext/index.tsx","Components/Container/index.jsx","Components/Spinner/index.jsx","index.tsx","Styles/theme.ts"],"names":["Types","OrderType","GlobalStyle","createGlobalStyle","Api","axios","create","baseURL","headers","Accept","Authorization","setLoading","dispatch","type","SET_LOADING","getRepositories","page","url","method","params","per_page","then","res","data","length","SET_NO_MORE_DATA","SET_HAS_MORE_DATA","status","SET_REPOSITORIES","payload","finally","orderRepositories","order","repositories","STRING","DATE","sort","dynamicSort","field","property","sortOrder","substr","a","b","RepositoryContext","createContext","useRepositoryContext","useContext","LoadMore","setPage","state","more","loading","goToPage","page_n","PAGINATION_SET_PAGE","paginationSetPage","MORE_REPOSITORIES","getMoreRepositories","className","href","onClick","search","disabled","archived","this","undefined","Search","setShow","setOrderDate","setOrderName","useState","setSearch","setDisabled","arquived","setArquived","builder","RepositorySearchBuilder","Accordion","activeKey","Item","eventKey","Header","Body","Form","onSubmit","Event","preventDefault","isArchived","filter","r","isDisabled","hasSearch","name","toLocaleLowerCase","includes","getSearch","UPDATE_REPOSITORIES","updateRepositories","Row","Col","md","Group","Label","Select","onChange","e","target","value","Control","placeholder","Button","variant","RepositoryCard","repository","id","description","substring","created_at","toString","Repositories","isMounted","useRef","orderName","orderDate","useEffect","current","handleOrderName","handleOrderDate","style","padding","rel","map","i","Alert","RepositoryReducer","action","RepositoryContextProvider","children","useReducer","Provider","Container","Styled","div","theme","height","css","centered","overlay","SpinnerContainer","Spinner","animation","ReactDOM","render","StrictMode","color","font","primary","secondary","document","getElementById"],"mappings":"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","file":"static/js/main.61e31fcb.chunk.js","sourcesContent":["\nexport interface IRepository {\n    id: number,\n    name: string,\n    url: string,\n    description: string,\n    visibility: string,\n    archived: bool,\n    disabled: bool,\n    language: string,\n    topics: Array<string>\n    created_at: Date,\n    updated_at: Date\n}\n\nexport type IRepositoryPagination = {\n    data: IRepository[],\n    page: number,\n}\n\nexport type ContextRepositoryType = {\n    state: StateRepository,\n    dispatch: React.Dispatch<ActionRepository>\n}\n\nexport interface ActionRepository {\n    type: Types;\n    payload?: any;\n}\n\nexport interface StateRepository {\n    loading: boolean,\n    more: boolean,\n    repositories: {\n        data: IRepository[],\n        page: number,\n    }\n}\n\nexport enum Types {\n    SET_LOADING = 'SET_LOADING',\n    SET_HAS_MORE_DATA = 'SET_HAS_MORE_DATA',\n    SET_NO_MORE_DATA = 'SET_NO_MORE_DATA',\n    SET_REPOSITORIES = 'SET_REPOSITORIES',\n    MORE_REPOSITORIES = 'MORE_REPOSITORIES',\n    UPDATE_REPOSITORIES = 'UPDATE_REPOSITORIES',\n    PAGINATION_SET_PAGE = 'PAGINATION_SET_PAGE'\n}\n\nexport enum OrderType {\n    DATE = 'DATE',\n    STRING = 'STRING',\n}\n\nexport interface Order {\n    field: string,\n    type: OrderType\n}\n\nexport interface RepositorySearchBuilderI {\n    \n    isArchived(): boolean|string;\n\n    isDisabled(): boolean|string;\n\n    hasSearch(): boolean;\n\n    getSearch(): string;\n}","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        font-family: 'Roboto', sans-serif;\n        box-shadow: none !important;\n    }\n\n    .required::after {\n        content: '*';\n        color: red;\n    }\n\n    .page-item{\n        cursor: pointer;\n    }\n    .disabled{\n        cursor: not-allowed !important;\n    }\n\n`","import axios from 'axios';\nimport { API_URL } from \"../Environment\";\n\nexport const Api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    Accept: \"application/vnd.github+json\",\n    Authorization: \"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\",\n  },\n  \n});\n","export const API_URL = \"https://api.github.com/users/jeferson3\";","import { IRepositoryPagination, Order, OrderType } from './../../@types/context_repository.d';\nimport { Types, IRepository, RepositorySearchBuilderI } from '../../@types/context_repository.d';\nimport { ActionRepository } from \"../../@types/context_repository.d\";\nimport { Api } from \"../../Services/Api\";\nimport { AxiosResponse } from 'axios';\n\nexport const setLoading = (dispatch: React.Dispatch<ActionRepository>) => {\n  dispatch({ type: Types.SET_LOADING });\n};\n\nexport const setMoreData = (dispatch: React.Dispatch<ActionRepository>) => {\n  dispatch({ type: Types.SET_HAS_MORE_DATA });\n};\n\nexport const setNoMoreData = (dispatch: React.Dispatch<ActionRepository>) => {\n  dispatch({ type: Types.SET_NO_MORE_DATA });\n};\n\nexport const getRepositories = (page: number = 0, dispatch: React.Dispatch<ActionRepository>) => {\n  setLoading(dispatch);\n\n  Api({\n    url: \"/repos\",\n    method: \"GET\",\n    params: {\n      page,\n      per_page: 5\n    }\n  })\n   .then((res: AxiosResponse<Array<IRepository>>) => {   \n      if (res.data.length === 0) {\n        dispatch({ type: Types.SET_NO_MORE_DATA });\n      }\n      else {\n        dispatch({ type: Types.SET_HAS_MORE_DATA });\n      }\n      if (res.status === 200) {\n        dispatch({ type: Types.SET_REPOSITORIES, payload: {\n          data: res.data,\n          page\n        } });\n      }\n      \n    })\n    .finally(() => {\n      setLoading(dispatch);\n    });\n};\n\nexport const getMoreRepositories = (page: number = 0, dispatch: React.Dispatch<ActionRepository>) => {\n  setLoading(dispatch);\n\n  Api({\n    url: \"/repos\",\n    method: \"GET\",\n    params: {\n      page,\n      per_page: 5\n    }\n  })\n   .then((res: AxiosResponse<Array<IRepository>>) => {   \n      if (res.data.length === 0) {\n        dispatch({ type: Types.SET_NO_MORE_DATA });\n      }\n      else {\n        dispatch({ type: Types.SET_HAS_MORE_DATA });\n      }\n      if (res.status === 200) {\n        dispatch({ type: Types.MORE_REPOSITORIES, payload: {\n          data: res.data,\n          page\n        } });\n      }\n      \n    })\n    .finally(() => {\n      setLoading(dispatch);\n    });\n};\n\nexport const updateRepositories = (dispatch: React.Dispatch<ActionRepository>, repositories: IRepositoryPagination, builder: RepositorySearchBuilderI) => {\n  let res = repositories;\n  if (builder.isArchived() === true) {\n    res.data = res.data.filter(r => !!r.archived)\n  }\n  else if (builder.isArchived() === false) {\n    res.data = res.data.filter(r => !r.archived)\n  }\n  if (builder.isDisabled() === true) {\n    res.data = res.data.filter(r => !!r.disabled)\n  }\n  else if (builder.isDisabled() === false) {\n    res.data = res.data.filter(r => !r.disabled)\n  }\n  if (builder.hasSearch()) {\n    res.data = res.data.filter(r => r.name.toLocaleLowerCase().includes(builder.getSearch().toLocaleLowerCase()))\n  }\n  if (builder.isArchived() === 'Todos' && builder.isDisabled() === 'Todos' && !builder.hasSearch()) {\n    getRepositories(1, dispatch);\n  }\n  else {\n    dispatch({ type: Types.UPDATE_REPOSITORIES, payload: res });\n  }\n};\n\nexport const orderRepositories = (order: Order, repositories: IRepositoryPagination) => {\n  let res = repositories.data;\n\n  if (order.type === OrderType.STRING) {\n    res.sort(dynamicSort(order.field));\n  }\n  else if (order.type === OrderType.DATE) {\n    res.sort(dynamicSort(order.field));\n  }\n};\n\nexport const paginationSetPage = (dispatch: React.Dispatch<ActionRepository>, page: Number) => {\n  dispatch({ type: Types.PAGINATION_SET_PAGE, payload: page });\n};\n\nconst dynamicSort = (property: string) => {\n  var sortOrder = 1;\n  if(property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n  }\n  return function (a: any, b: any) {\n      var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n      return result * sortOrder;\n  }\n}","import { ContextRepositoryType } from '../../@types/context_repository';\nimport { createContext, useContext } from \"react\";\n\nexport const RepositoryContext = createContext({} as ContextRepositoryType);\n\nexport const useRepositoryContext = () => {\n    return useContext(RepositoryContext);\n}","import { getMoreRepositories, paginationSetPage } from \"../../../Context/RepositoryContext/actions\";\nimport { useRepositoryContext } from \"../../../Context/RepositoryContext/context\";\n\nexport const LoadMore = ({ page, setPage }) => {\n\n    const { state: { loading, more }, dispatch } = useRepositoryContext();\n\n    const nextPage = () => {\n        goToPage(page + 1);\n    }\n\n    const goToPage = (page_n) => {\n        setPage(page_n)\n        paginationSetPage(dispatch, page);\n        getMoreRepositories(page_n, dispatch);\n    }\n\n    return (\n        <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination justify-content-center\">\n                {\n                    more &&\n                    <li className=\"page-item\">\n                        <a href=\"#/\" className=\"page-link\" onClick={() => nextPage()}>Load More ...</a>\n                    </li>\n                }\n            </ul>\n        </nav>\n    )\n}","import { RepositorySearchBuilderI } from './../@types/context_repository.d';\n\nclass RepositorySearchBuilder implements RepositorySearchBuilderI{\n\n    private search: string = '';\n    private disabled: boolean|string = 'Todos';\n    private archived: boolean|string = 'Todos';\n\n    // __construct(){\n\n    // }\n\n    /**\n     * setSearch\n     */\n    public setSearch(search: string) {\n        this.search = search;\n    }\n    /**\n     * setDisabled\n     */\n    public setDisabled(disabled: string) {\n        \n        if (disabled === 'sim') {\n            this.disabled = true;\n        }\n        else if (disabled === 'nao') {\n            this.disabled = false;\n        }\n        else {\n            this.disabled = 'Todos';\n        }\n    }\n    /**\n     * setArquived\n     */\n    public setArquived(archived: string) {\n\n        if (archived === 'sim') {\n            this.archived = true;\n        }\n        else if (archived === 'nao') {\n            this.archived = false;\n        }\n        else {\n            this.archived = 'Todos';\n        }\n    }\n\n    public isArchived() {\n        return this.archived;\n    }\n\n    public isDisabled() {\n        return this.disabled;\n    }\n\n    public hasSearch() {\n        return this.search !== undefined && this.search !== null && this.search !== \"\";\n    }\n\n    public getSearch() {\n        return this.search;\n    }\n}\n\n\nexport default new RepositorySearchBuilder();","import { useState } from \"react\";\nimport { Accordion, Button, Col, Form, Row } from \"react-bootstrap\";\nimport { getRepositories, updateRepositories } from \"../../../Context/RepositoryContext/actions\";\nimport { useRepositoryContext } from \"../../../Context/RepositoryContext/context\";\nimport RepositorySearchBuilder from \"../../../Services/RepositorySearchBuilder\";\n\nexport const Search = function ({ setShow, setOrderDate, setOrderName }) {\n\n  const [search, setSearch] = useState('');\n  const [disabled, setDisabled] = useState('Todos');\n  const [arquived, setArquived] = useState('Todos');\n\n  const builder = RepositorySearchBuilder;\n  const { dispatch, state: {repositories} } = useRepositoryContext();\n\n  const handleSubmitForm = function (Event) {\n    Event.preventDefault();\n    // getRepositories(1, dispatch);\n    updateRepositories(dispatch, repositories, builder)\n  };\n\n  const clearForm = function (Event) {\n    Event.preventDefault();\n    setSearch('');\n    setArquived('Todos');\n    setDisabled('Todos');\n    builder.setSearch('');\n    builder.setArquived('Todos');\n    builder.setDisabled('Todos');\n    setOrderDate(false);\n    setOrderName(false);\n    getRepositories(1, dispatch);\n  };\n\n  const handleDisabled = function(e) {\n    builder.setDisabled(e.target.value);\n    setDisabled(e.target.value)\n  }\n\n  const handleArquived = function(e) {\n    builder.setArquived(e.target.value);\n    setArquived(e.target.value)\n  }\n\n  const handleSearch = function(e) {\n    builder.setSearch(e.target.value);\n    setSearch(e.target.value)\n  }\n  \n  return (\n    <Accordion activeKey=\"0\">\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>Filtros</Accordion.Header>\n        <Accordion.Body>\n          <Form onSubmit={handleSubmitForm}>\n            <Row>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Disabilitado:</Form.Label>\n                  <Form.Select onChange={handleDisabled} value={disabled}>\n                    <option value={'Todos'}>-- selecione --</option>\n                    <option value={'sim'}>Sim</option>\n                    <option value={'nao'}>Não</option>\n                  </Form.Select>\n                </Form.Group>  \n              </Col>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Arquivado:</Form.Label>\n                  <Form.Select onChange={handleArquived} value={arquived}>\n                    <option value={'Todos'}>-- selecione --</option>\n                    <option value={'sim'}>Sim</option>\n                    <option value={'nao'}>Não</option>\n                  </Form.Select>\n                </Form.Group>  \n              </Col>\n              <Col md={12}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Control\n                    type=\"search\"\n                    placeholder=\"Pesquisar\"\n                    className=\"me-2\"\n                    aria-label=\"Search\"\n                    onChange={handleSearch}\n                    value={search}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={12} className=\"text-end\">\n                <Button variant=\"primary\" type=\"submit\">\n                  Pesquisar\n                </Button>\n                <Button className=\"ms-2\" variant=\"secondary\" type=\"button\" onClick={clearForm}>\n                  Limpar\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n","import { IRepository } from \"../../@types/context_repository\"\n\ntype Props = {\n    repository: IRepository\n}\n\nexport const RepositoryCard: React.FC<Props> = ({ repository }) => {\n\n    \n\n    return (\n        <>\n            <tr>\n                <td>{repository.id}</td>\n                <td>{repository.name}</td>\n                <td>{repository.description?.substring(0, 10)}...</td>\n                <td>{!!repository.archived ? 'Sim' : 'Não'}</td>\n                <td>{!!repository.disabled ? 'Sim' : 'Não'}</td>\n                <td>{repository.created_at.toString()}</td>\n            </tr>\n        </>\n    )\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { getRepositories, orderRepositories } from \"../../Context/RepositoryContext/actions\";\nimport { useRepositoryContext } from \"../../Context/RepositoryContext/context\";\nimport { LoadMore } from \"../../Components/Repository/LoadMore\";\nimport { Search } from \"../../Components/Repository/Search\";\nimport { Alert } from \"react-bootstrap\";\nimport { IRepository, OrderType } from \"../../@types/context_repository.d\";\nimport { RepositoryCard } from \"../../Components/Repository/index\";\n\nexport const Repositories: React.FC = function() {\n\n  const { state: { repositories }, dispatch } = useRepositoryContext();\n\n  const isMounted = useRef(true);\n\n  const [page, setPage] = useState(repositories.page);\n  const [, setShow] = useState(false);\n  const [orderName, setOrderName] = useState(false);\n  const [orderDate, setOrderDate] = useState(false);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      getRepositories(page, dispatch);\n    }\n    return () => {\n      isMounted.current = false;\n    }\n  }, [page, dispatch]);\n\n\n  const handleOrderName = function() {\n    setOrderName(!orderName);\n    orderRepositories({type: OrderType.STRING, field: (orderName ? 'name' : '-name')}, repositories);  \n  }\n\n  const handleOrderDate = function() {\n    setOrderDate(!orderDate);\n    orderRepositories({type: OrderType.DATE, field: (orderDate ? 'created_at' : '-created_at')}, repositories); \n  }\n\n  return (\n    <div style={{ padding: \"10px 50px\" }}>\n      <h1 className=\"text-uppercase text-center mt-3\">Repositórios <a href=\"https://github.com/jeferson3\" target={\"_blank\"} rel=\"noreferrer\" className=\"text-danger\">Jeferson</a></h1>\n      \n      <Search setShow={setShow} setOrderDate={setOrderDate} setOrderName={setOrderName} />\n      {!!repositories.data && repositories.data.length > 0 && (\n        <>\n          <table className=\"table table-stripped table-dark\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                { !!orderName && \n                  <th className=\"d-flex\" onClick={handleOrderName}>\n                    <i className=\"fas fa-sort-up me-1\"></i>\n                    <span>Nome</span>\n                  </th>\n                }\n                { !orderName && \n                  <th className=\"d-flex\" onClick={handleOrderName}>\n                    <i className=\"fas fa-sort-down me-1\"></i>\n                    <span>Nome</span>\n                  </th>\n                }\n                <th>Descrição</th>\n                <th>Arquivado</th>\n                <th>Desabilitado</th>\n                { !!orderDate && \n                  <th className=\"d-flex\" onClick={handleOrderDate}>\n                    <i className=\"fas fa-sort-up me-1\"></i>\n                    <span>Data Criação</span>\n                  </th>\n                }\n                { !orderDate && \n                  <th className=\"d-flex\" onClick={handleOrderDate}>\n                    <i className=\"fas fa-sort-down me-1\"></i>\n                    <span>Data Criação</span>\n                  </th>\n                }\n              </tr>\n            </thead>\n            <tbody>\n              {repositories.data.map((r: IRepository, i: number) => {\n                  return <RepositoryCard key={i} repository={r} />;\n                })}\n            </tbody>\n          </table>\n\n          <LoadMore page={page} setPage={setPage} />\n        </>\n      )}\n      {(!repositories.data || repositories.data.length === 0) && (\n        <Alert variant=\"danger\">\n          Nenhum registro encontrado!\n        </Alert>\n      )}\n      \n    </div>\n  );\n}\n","export const data = {\n    loading: false,\n    more: true,\n    repositories: {\n        data: [],\n        page: 1\n    }\n}","import {\n  ActionRepository,\n  StateRepository,\n  Types,\n} from \"../../@types/context_repository.d\";\n\nexport const RepositoryReducer = (\n  state: StateRepository,\n  action: ActionRepository\n): StateRepository => {\n\n  switch (action.type) {\n    case Types.SET_LOADING:\n      return { ...state, loading: !state.loading };\n    case Types.SET_NO_MORE_DATA:\n      return { ...state, more: false };\n    case Types.SET_HAS_MORE_DATA:\n      return { ...state, more: true };\n    case Types.SET_REPOSITORIES:\n      return { ...state, repositories: action.payload };    \n    case Types.MORE_REPOSITORIES:\n      return { ...state, repositories: {...state.repositories, data: [...state.repositories.data, ...action.payload.data] }};\n    case Types.PAGINATION_SET_PAGE:\n      return {\n        ...state,\n        repositories: { ...state.repositories, page: action.payload },\n      };\n    case Types.UPDATE_REPOSITORIES:\n      return {\n        ...state,\n        repositories: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n};\n","import React, { PropsWithChildren, useReducer } from \"react\";\nimport { RepositoryContext } from \"./context\";\nimport { data } from \"./data\";\nimport { RepositoryReducer } from \"./reducer\";\n\nexport const RepositoryContextProvider: React.FC<PropsWithChildren> = ({ children }) => {\n    const [state, dispatch] = useReducer(RepositoryReducer, data);\n    return <RepositoryContext.Provider value={{state, dispatch}}>{ children }</RepositoryContext.Provider>\n}","import Styled, { css } from \"styled-components\";\n\nexport const Container = Styled.div`\n    \n    width: 100%;\n\n    ${({ theme, height }) => {\n\n        if (height) {\n            return css`\n                height: ${height}vh;\n            `\n        }\n    }}\n    ${({ centered }) => {\n        if (centered) {\n            return css`\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            `\n        }\n    }}\n    ${({ overlay }) => {\n        if (overlay) {\n            return css`\n                position: fixed;\n                width: 100%;\n                height: 100%;\n                background-color: rgba(0,0,0,0.3); /* Black background with opacity */\n                z-index: 999;            \n            `\n        }\n    }}\n`","import { Spinner } from \"react-bootstrap\"\nimport { useRepositoryContext } from \"../../Context/RepositoryContext/context\";\nimport { Container } from \"../Container\"\n\nexport function SpinnerContainer() {\n\n    const { state: { loading }, } = useRepositoryContext();\n\n    return (\n        <>\n            {!!loading && <Container centered={true} overlay={true} height={100}>\n                <Spinner animation=\"grow\" />\n            </Container>}\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './Styles/theme';\nimport { GlobalStyle } from './Styles/global-style';\n\nimport { Repositories } from './Pages/Repositories';\nimport { RepositoryContextProvider } from './Context/RepositoryContext/index';\nimport { SpinnerContainer } from './Components/Spinner';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <RepositoryContextProvider>\n        <SpinnerContainer />\n        <Repositories />\n      </RepositoryContextProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export const theme = {\n    color: {\n        font: {\n            primary: 'blue',\n            secondary: 'green'\n        }\n    }\n}"],"sourceRoot":""}